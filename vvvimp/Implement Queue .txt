Implement Queue 
Implement the Queue data structure and perform Enqueue / Dequeue operations.



Note:

Do not use any inbuilt functions / libraries for the Queue.



Input Format
The first line of input contains T - number of operations. It is followed by T lines, each line contains either "Enqueue x" or "Dequeue".



Output Format

For each "Dequeue" operation, print the dequeued element, separated by a newline. If the queue is empty, print "Empty".



Constraints

1 <= T <= 10000

-100 <= x <= 100



Example

Input

8

Enqueue 5

Dequeue

Dequeue

Enqueue 10

Enqueue -15

Dequeue

Enqueue -10

Dequeue



Output

5

Empty

10

-15



Explanation



Self Explanatory



t=int(input().strip())
def queue(operations):
    queue=[]
    res=[]
    for ops in operations:
        if ops.startswith("Enqueue"):
            val=int(ops.split()[1])
            queue.append(val)
        elif ops=="Dequeue":
            if queue:
                res.append(queue.pop(0))
            else:
                res.append("Empty")
    return res
operations=[input().strip() for i in range(t)]
result=queue(operations)
for re in result:
    print(re)